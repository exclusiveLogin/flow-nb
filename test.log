PLC connected
client Front End connected
Socket {
  nsp: 
   Namespace {
     name: [32m'/'[39m,
     server: 
      Server {
        nsps: [36m[Object][39m,
        _path: [32m'/socket.io'[39m,
        _serveClient: [33mtrue[39m,
        _adapter: [36m[Function: Adapter][39m,
        _origins: [32m'*:*'[39m,
        sockets: [36m[Circular][39m,
        eio: [36m[Object][39m,
        httpServer: [36m[Object][39m,
        engine: [36m[Object][39m },
     sockets: { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Circular][39m },
     connected: { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Circular][39m },
     fns: [],
     ids: [33m0[39m,
     adapter: 
      Adapter {
        nsp: [36m[Circular][39m,
        rooms: [36m[Object][39m,
        sids: [36m[Object][39m,
        encoder: Encoder {} },
     _events: { connection: [36m[Function][39m },
     _eventsCount: [33m1[39m },
  server: 
   Server {
     nsps: { [32m'/'[39m: [36m[Object][39m },
     _path: [32m'/socket.io'[39m,
     _serveClient: [33mtrue[39m,
     _adapter: [36m[Function: Adapter][39m,
     _origins: [32m'*:*'[39m,
     sockets: 
      Namespace {
        name: [32m'/'[39m,
        server: [36m[Circular][39m,
        sockets: [36m[Object][39m,
        connected: [36m[Object][39m,
        fns: [],
        ids: [33m0[39m,
        adapter: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     eio: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m1[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     httpServer: 
      Server {
        domain: [1mnull[22m,
        _events: [36m[Object][39m,
        _eventsCount: [33m4[39m,
        _maxListeners: [90mundefined[39m,
        _connections: [33m1[39m,
        _handle: [36m[Object][39m,
        _usingSlaves: [33mfalse[39m,
        _slaves: [],
        _unref: [33mfalse[39m,
        allowHalfOpen: [33mtrue[39m,
        pauseOnConnect: [33mfalse[39m,
        httpAllowHalfOpen: [33mfalse[39m,
        timeout: [33m120000[39m,
        _pendingResponseData: [33m0[39m,
        _connectionKey: [32m'6::::3000'[39m },
     engine: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m1[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m } },
  adapter: 
   Adapter {
     nsp: 
      Namespace {
        name: [32m'/'[39m,
        server: [36m[Object][39m,
        sockets: [36m[Object][39m,
        connected: [36m[Object][39m,
        fns: [],
        ids: [33m0[39m,
        adapter: [36m[Circular][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     rooms: { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m },
     sids: { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m },
     encoder: Encoder {} },
  id: [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m,
  client: 
   Client {
     server: 
      Server {
        nsps: [36m[Object][39m,
        _path: [32m'/socket.io'[39m,
        _serveClient: [33mtrue[39m,
        _adapter: [36m[Function: Adapter][39m,
        _origins: [32m'*:*'[39m,
        sockets: [36m[Object][39m,
        eio: [36m[Object][39m,
        httpServer: [36m[Object][39m,
        engine: [36m[Object][39m },
     conn: 
      Socket {
        id: [32m'7fSI22S5h8YoQ_UjAAAA'[39m,
        server: [36m[Object][39m,
        upgrading: [33mfalse[39m,
        upgraded: [33mfalse[39m,
        readyState: [32m'open'[39m,
        writeBuffer: [36m[Object][39m,
        packetsFn: [36m[Object][39m,
        sentCallbackFn: [],
        cleanupFn: [36m[Object][39m,
        request: [36m[Object][39m,
        remoteAddress: [32m'::ffff:10.210.30.41'[39m,
        checkIntervalTimer: [1mnull[22m,
        upgradeTimeoutTimer: [1mnull[22m,
        pingTimeoutTimer: [36m[Object][39m,
        transport: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m3[39m },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: [1mnull[22m, _callbacks: [36m[Object][39m },
     id: [32m'7fSI22S5h8YoQ_UjAAAA'[39m,
     request: 
      IncomingMessage {
        _readableState: [36m[Object][39m,
        readable: [33mtrue[39m,
        domain: [1mnull[22m,
        _events: {},
        _eventsCount: [33m0[39m,
        _maxListeners: [90mundefined[39m,
        socket: [36m[Object][39m,
        connection: [36m[Object][39m,
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        headers: [36m[Object][39m,
        rawHeaders: [36m[Object][39m,
        trailers: {},
        rawTrailers: [],
        upgrade: [33mfalse[39m,
        url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_82r'[39m,
        method: [32m'GET'[39m,
        statusCode: [1mnull[22m,
        statusMessage: [1mnull[22m,
        client: [36m[Object][39m,
        _consuming: [33mfalse[39m,
        _dumped: [33mtrue[39m,
        _query: [36m[Object][39m,
        res: [36m[Object][39m,
        cleanup: [36m[Function: cleanup][39m },
     onclose: [36m[Function: bound ][39m,
     ondata: [36m[Function: bound ][39m,
     onerror: [36m[Function: bound ][39m,
     ondecoded: [36m[Function: bound ][39m,
     sockets: { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Circular][39m },
     nsps: { [32m'/'[39m: [36m[Circular][39m },
     connectBuffer: [] },
  conn: 
   Socket {
     id: [32m'7fSI22S5h8YoQ_UjAAAA'[39m,
     server: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m1[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     upgrading: [33mfalse[39m,
     upgraded: [33mfalse[39m,
     readyState: [32m'open'[39m,
     writeBuffer: [ [36m[Object][39m ],
     packetsFn: [ [90mundefined[39m ],
     sentCallbackFn: [],
     cleanupFn: [ [36m[Function][39m, [36m[Function][39m ],
     request: 
      IncomingMessage {
        _readableState: [36m[Object][39m,
        readable: [33mtrue[39m,
        domain: [1mnull[22m,
        _events: {},
        _eventsCount: [33m0[39m,
        _maxListeners: [90mundefined[39m,
        socket: [36m[Object][39m,
        connection: [36m[Object][39m,
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        headers: [36m[Object][39m,
        rawHeaders: [36m[Object][39m,
        trailers: {},
        rawTrailers: [],
        upgrade: [33mfalse[39m,
        url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_82r'[39m,
        method: [32m'GET'[39m,
        statusCode: [1mnull[22m,
        statusMessage: [1mnull[22m,
        client: [36m[Object][39m,
        _consuming: [33mfalse[39m,
        _dumped: [33mtrue[39m,
        _query: [36m[Object][39m,
        res: [36m[Object][39m,
        cleanup: [36m[Function: cleanup][39m },
     remoteAddress: [32m'::ffff:10.210.30.41'[39m,
     checkIntervalTimer: [1mnull[22m,
     upgradeTimeoutTimer: [1mnull[22m,
     pingTimeoutTimer: 
      Timeout {
        _called: [33mfalse[39m,
        _idleTimeout: [33m85000[39m,
        _idlePrev: [36m[Object][39m,
        _idleNext: [36m[Object][39m,
        _idleStart: [33m198[39m,
        _onTimeout: [36m[Function][39m,
        _repeat: [1mnull[22m },
     transport: 
      XHR {
        readyState: [32m'open'[39m,
        discarded: [33mfalse[39m,
        closeTimeout: [33m30000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        httpCompression: [36m[Object][39m,
        supportsBinary: [33mtrue[39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m5[39m,
        sid: [32m'7fSI22S5h8YoQ_UjAAAA'[39m,
        req: [1mnull[22m,
        res: [1mnull[22m,
        writable: [33mfalse[39m },
     _events: 
      { close: [36m[Object][39m,
        data: [36m[Function: bound ][39m,
        error: [36m[Function: bound ][39m },
     _eventsCount: [33m3[39m },
  rooms: {},
  acks: {},
  connected: [33mtrue[39m,
  disconnected: [33mfalse[39m,
  handshake: 
   { headers: 
      { host: [32m'10.210.30.148:3000'[39m,
        connection: [32m'keep-alive'[39m,
        [32m'user-agent'[39m: [32m'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36'[39m,
        origin: [32m'http://10.210.30.148'[39m,
        accept: [32m'*/*'[39m,
        referer: [32m'http://10.210.30.148/sku/'[39m,
        [32m'accept-encoding'[39m: [32m'gzip, deflate, sdch'[39m,
        [32m'accept-language'[39m: [32m'ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4'[39m,
        cookie: [32m'io=uPLG9zulIu1C5fTzAAAE'[39m },
     time: [32m'Thu Sep 29 2016 16:47:41 GMT+0400 (SAMT)'[39m,
     address: [32m'::ffff:10.210.30.41'[39m,
     xdomain: [33mtrue[39m,
     secure: [33mfalse[39m,
     issued: [33m1475153261828[39m,
     url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_82r'[39m,
     query: { EIO: [32m'3'[39m, transport: [32m'polling'[39m, t: [32m'LTr_82r'[39m } } }
Register SQL local success
client Front End connected
Socket {
  nsp: 
   Namespace {
     name: [32m'/'[39m,
     server: 
      Server {
        nsps: [36m[Object][39m,
        _path: [32m'/socket.io'[39m,
        _serveClient: [33mtrue[39m,
        _adapter: [36m[Function: Adapter][39m,
        _origins: [32m'*:*'[39m,
        sockets: [36m[Circular][39m,
        eio: [36m[Object][39m,
        httpServer: [36m[Object][39m,
        engine: [36m[Object][39m },
     sockets: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Circular][39m },
     connected: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Circular][39m },
     fns: [],
     ids: [33m0[39m,
     adapter: 
      Adapter {
        nsp: [36m[Circular][39m,
        rooms: [36m[Object][39m,
        sids: [36m[Object][39m,
        encoder: Encoder {} },
     _events: { connection: [36m[Function][39m },
     _eventsCount: [33m1[39m },
  server: 
   Server {
     nsps: { [32m'/'[39m: [36m[Object][39m },
     _path: [32m'/socket.io'[39m,
     _serveClient: [33mtrue[39m,
     _adapter: [36m[Function: Adapter][39m,
     _origins: [32m'*:*'[39m,
     sockets: 
      Namespace {
        name: [32m'/'[39m,
        server: [36m[Circular][39m,
        sockets: [36m[Object][39m,
        connected: [36m[Object][39m,
        fns: [],
        ids: [33m0[39m,
        adapter: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     eio: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m2[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     httpServer: 
      Server {
        domain: [1mnull[22m,
        _events: [36m[Object][39m,
        _eventsCount: [33m4[39m,
        _maxListeners: [90mundefined[39m,
        _connections: [33m2[39m,
        _handle: [36m[Object][39m,
        _usingSlaves: [33mfalse[39m,
        _slaves: [],
        _unref: [33mfalse[39m,
        allowHalfOpen: [33mtrue[39m,
        pauseOnConnect: [33mfalse[39m,
        httpAllowHalfOpen: [33mfalse[39m,
        timeout: [33m120000[39m,
        _pendingResponseData: [33m0[39m,
        _connectionKey: [32m'6::::3000'[39m },
     engine: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m2[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m } },
  adapter: 
   Adapter {
     nsp: 
      Namespace {
        name: [32m'/'[39m,
        server: [36m[Object][39m,
        sockets: [36m[Object][39m,
        connected: [36m[Object][39m,
        fns: [],
        ids: [33m0[39m,
        adapter: [36m[Circular][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     rooms: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Object][39m },
     sids: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Object][39m },
     encoder: Encoder {} },
  id: [32m'/#zjSnoWc0-LpfoveeAAAB'[39m,
  client: 
   Client {
     server: 
      Server {
        nsps: [36m[Object][39m,
        _path: [32m'/socket.io'[39m,
        _serveClient: [33mtrue[39m,
        _adapter: [36m[Function: Adapter][39m,
        _origins: [32m'*:*'[39m,
        sockets: [36m[Object][39m,
        eio: [36m[Object][39m,
        httpServer: [36m[Object][39m,
        engine: [36m[Object][39m },
     conn: 
      Socket {
        id: [32m'zjSnoWc0-LpfoveeAAAB'[39m,
        server: [36m[Object][39m,
        upgrading: [33mfalse[39m,
        upgraded: [33mfalse[39m,
        readyState: [32m'open'[39m,
        writeBuffer: [36m[Object][39m,
        packetsFn: [36m[Object][39m,
        sentCallbackFn: [],
        cleanupFn: [36m[Object][39m,
        request: [36m[Object][39m,
        remoteAddress: [32m'::ffff:10.210.30.41'[39m,
        checkIntervalTimer: [1mnull[22m,
        upgradeTimeoutTimer: [1mnull[22m,
        pingTimeoutTimer: [36m[Object][39m,
        transport: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m3[39m },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: [1mnull[22m, _callbacks: [36m[Object][39m },
     id: [32m'zjSnoWc0-LpfoveeAAAB'[39m,
     request: 
      IncomingMessage {
        _readableState: [36m[Object][39m,
        readable: [33mtrue[39m,
        domain: [1mnull[22m,
        _events: {},
        _eventsCount: [33m0[39m,
        _maxListeners: [90mundefined[39m,
        socket: [36m[Object][39m,
        connection: [36m[Object][39m,
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        headers: [36m[Object][39m,
        rawHeaders: [36m[Object][39m,
        trailers: {},
        rawTrailers: [],
        upgrade: [33mfalse[39m,
        url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_8Zj'[39m,
        method: [32m'GET'[39m,
        statusCode: [1mnull[22m,
        statusMessage: [1mnull[22m,
        client: [36m[Object][39m,
        _consuming: [33mfalse[39m,
        _dumped: [33mtrue[39m,
        _query: [36m[Object][39m,
        res: [36m[Object][39m,
        cleanup: [36m[Function: cleanup][39m },
     onclose: [36m[Function: bound ][39m,
     ondata: [36m[Function: bound ][39m,
     onerror: [36m[Function: bound ][39m,
     ondecoded: [36m[Function: bound ][39m,
     sockets: { [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Circular][39m },
     nsps: { [32m'/'[39m: [36m[Circular][39m },
     connectBuffer: [] },
  conn: 
   Socket {
     id: [32m'zjSnoWc0-LpfoveeAAAB'[39m,
     server: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m2[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     upgrading: [33mfalse[39m,
     upgraded: [33mfalse[39m,
     readyState: [32m'open'[39m,
     writeBuffer: [ [36m[Object][39m ],
     packetsFn: [ [90mundefined[39m ],
     sentCallbackFn: [],
     cleanupFn: [ [36m[Function][39m, [36m[Function][39m ],
     request: 
      IncomingMessage {
        _readableState: [36m[Object][39m,
        readable: [33mtrue[39m,
        domain: [1mnull[22m,
        _events: {},
        _eventsCount: [33m0[39m,
        _maxListeners: [90mundefined[39m,
        socket: [36m[Object][39m,
        connection: [36m[Object][39m,
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        headers: [36m[Object][39m,
        rawHeaders: [36m[Object][39m,
        trailers: {},
        rawTrailers: [],
        upgrade: [33mfalse[39m,
        url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_8Zj'[39m,
        method: [32m'GET'[39m,
        statusCode: [1mnull[22m,
        statusMessage: [1mnull[22m,
        client: [36m[Object][39m,
        _consuming: [33mfalse[39m,
        _dumped: [33mtrue[39m,
        _query: [36m[Object][39m,
        res: [36m[Object][39m,
        cleanup: [36m[Function: cleanup][39m },
     remoteAddress: [32m'::ffff:10.210.30.41'[39m,
     checkIntervalTimer: [1mnull[22m,
     upgradeTimeoutTimer: [1mnull[22m,
     pingTimeoutTimer: 
      Timeout {
        _called: [33mfalse[39m,
        _idleTimeout: [33m85000[39m,
        _idlePrev: [36m[Object][39m,
        _idleNext: [36m[Object][39m,
        _idleStart: [33m1084[39m,
        _onTimeout: [36m[Function][39m,
        _repeat: [1mnull[22m },
     transport: 
      XHR {
        readyState: [32m'open'[39m,
        discarded: [33mfalse[39m,
        closeTimeout: [33m30000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        httpCompression: [36m[Object][39m,
        supportsBinary: [33mtrue[39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m5[39m,
        sid: [32m'zjSnoWc0-LpfoveeAAAB'[39m,
        req: [1mnull[22m,
        res: [1mnull[22m,
        writable: [33mfalse[39m },
     _events: 
      { close: [36m[Object][39m,
        data: [36m[Function: bound ][39m,
        error: [36m[Function: bound ][39m },
     _eventsCount: [33m3[39m },
  rooms: {},
  acks: {},
  connected: [33mtrue[39m,
  disconnected: [33mfalse[39m,
  handshake: 
   { headers: 
      { host: [32m'10.210.30.148:3000'[39m,
        connection: [32m'keep-alive'[39m,
        [32m'user-agent'[39m: [32m'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36'[39m,
        origin: [32m'http://10.210.30.148'[39m,
        accept: [32m'*/*'[39m,
        referer: [32m'http://10.210.30.148/'[39m,
        [32m'accept-encoding'[39m: [32m'gzip, deflate, sdch'[39m,
        [32m'accept-language'[39m: [32m'ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4'[39m,
        cookie: [32m'io=7fSI22S5h8YoQ_UjAAAA'[39m },
     time: [32m'Thu Sep 29 2016 16:47:42 GMT+0400 (SAMT)'[39m,
     address: [32m'::ffff:10.210.30.41'[39m,
     xdomain: [33mtrue[39m,
     secure: [33mfalse[39m,
     issued: [33m1475153262710[39m,
     url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_8Zj'[39m,
     query: { EIO: [32m'3'[39m, transport: [32m'polling'[39m, t: [32m'LTr_8Zj'[39m } } }
1:0.05 2:1.72 3:0.99 4:0.03 heap = 17639944
client Front End connected
Socket {
  nsp: 
   Namespace {
     name: [32m'/'[39m,
     server: 
      Server {
        nsps: [36m[Object][39m,
        _path: [32m'/socket.io'[39m,
        _serveClient: [33mtrue[39m,
        _adapter: [36m[Function: Adapter][39m,
        _origins: [32m'*:*'[39m,
        sockets: [36m[Circular][39m,
        eio: [36m[Object][39m,
        httpServer: [36m[Object][39m,
        engine: [36m[Object][39m },
     sockets: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Object][39m,
        [32m'/#iJV3mzfYKrrGADHOAAAC'[39m: [36m[Circular][39m },
     connected: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Object][39m,
        [32m'/#iJV3mzfYKrrGADHOAAAC'[39m: [36m[Circular][39m },
     fns: [],
     ids: [33m0[39m,
     adapter: 
      Adapter {
        nsp: [36m[Circular][39m,
        rooms: [36m[Object][39m,
        sids: [36m[Object][39m,
        encoder: Encoder {} },
     _events: { connection: [36m[Function][39m },
     _eventsCount: [33m1[39m },
  server: 
   Server {
     nsps: { [32m'/'[39m: [36m[Object][39m },
     _path: [32m'/socket.io'[39m,
     _serveClient: [33mtrue[39m,
     _adapter: [36m[Function: Adapter][39m,
     _origins: [32m'*:*'[39m,
     sockets: 
      Namespace {
        name: [32m'/'[39m,
        server: [36m[Circular][39m,
        sockets: [36m[Object][39m,
        connected: [36m[Object][39m,
        fns: [],
        ids: [33m0[39m,
        adapter: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     eio: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m3[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     httpServer: 
      Server {
        domain: [1mnull[22m,
        _events: [36m[Object][39m,
        _eventsCount: [33m4[39m,
        _maxListeners: [90mundefined[39m,
        _connections: [33m3[39m,
        _handle: [36m[Object][39m,
        _usingSlaves: [33mfalse[39m,
        _slaves: [],
        _unref: [33mfalse[39m,
        allowHalfOpen: [33mtrue[39m,
        pauseOnConnect: [33mfalse[39m,
        httpAllowHalfOpen: [33mfalse[39m,
        timeout: [33m120000[39m,
        _pendingResponseData: [33m0[39m,
        _connectionKey: [32m'6::::3000'[39m },
     engine: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m3[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m } },
  adapter: 
   Adapter {
     nsp: 
      Namespace {
        name: [32m'/'[39m,
        server: [36m[Object][39m,
        sockets: [36m[Object][39m,
        connected: [36m[Object][39m,
        fns: [],
        ids: [33m0[39m,
        adapter: [36m[Circular][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     rooms: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Object][39m,
        [32m'/#iJV3mzfYKrrGADHOAAAC'[39m: [36m[Object][39m },
     sids: 
      { [32m'/#7fSI22S5h8YoQ_UjAAAA'[39m: [36m[Object][39m,
        [32m'/#zjSnoWc0-LpfoveeAAAB'[39m: [36m[Object][39m,
        [32m'/#iJV3mzfYKrrGADHOAAAC'[39m: [36m[Object][39m },
     encoder: Encoder {} },
  id: [32m'/#iJV3mzfYKrrGADHOAAAC'[39m,
  client: 
   Client {
     server: 
      Server {
        nsps: [36m[Object][39m,
        _path: [32m'/socket.io'[39m,
        _serveClient: [33mtrue[39m,
        _adapter: [36m[Function: Adapter][39m,
        _origins: [32m'*:*'[39m,
        sockets: [36m[Object][39m,
        eio: [36m[Object][39m,
        httpServer: [36m[Object][39m,
        engine: [36m[Object][39m },
     conn: 
      Socket {
        id: [32m'iJV3mzfYKrrGADHOAAAC'[39m,
        server: [36m[Object][39m,
        upgrading: [33mfalse[39m,
        upgraded: [33mfalse[39m,
        readyState: [32m'open'[39m,
        writeBuffer: [36m[Object][39m,
        packetsFn: [36m[Object][39m,
        sentCallbackFn: [],
        cleanupFn: [36m[Object][39m,
        request: [36m[Object][39m,
        remoteAddress: [32m'::ffff:10.210.30.41'[39m,
        checkIntervalTimer: [1mnull[22m,
        upgradeTimeoutTimer: [1mnull[22m,
        pingTimeoutTimer: [36m[Object][39m,
        transport: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m3[39m },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: [1mnull[22m, _callbacks: [36m[Object][39m },
     id: [32m'iJV3mzfYKrrGADHOAAAC'[39m,
     request: 
      IncomingMessage {
        _readableState: [36m[Object][39m,
        readable: [33mtrue[39m,
        domain: [1mnull[22m,
        _events: {},
        _eventsCount: [33m0[39m,
        _maxListeners: [90mundefined[39m,
        socket: [36m[Object][39m,
        connection: [36m[Object][39m,
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        headers: [36m[Object][39m,
        rawHeaders: [36m[Object][39m,
        trailers: {},
        rawTrailers: [],
        upgrade: [33mfalse[39m,
        url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_8rW'[39m,
        method: [32m'GET'[39m,
        statusCode: [1mnull[22m,
        statusMessage: [1mnull[22m,
        client: [36m[Object][39m,
        _consuming: [33mfalse[39m,
        _dumped: [33mtrue[39m,
        _query: [36m[Object][39m,
        res: [36m[Object][39m,
        cleanup: [36m[Function: cleanup][39m },
     onclose: [36m[Function: bound ][39m,
     ondata: [36m[Function: bound ][39m,
     onerror: [36m[Function: bound ][39m,
     ondecoded: [36m[Function: bound ][39m,
     sockets: { [32m'/#iJV3mzfYKrrGADHOAAAC'[39m: [36m[Circular][39m },
     nsps: { [32m'/'[39m: [36m[Circular][39m },
     connectBuffer: [] },
  conn: 
   Socket {
     id: [32m'iJV3mzfYKrrGADHOAAAC'[39m,
     server: 
      Server {
        clients: [36m[Object][39m,
        clientsCount: [33m3[39m,
        pingTimeout: [33m60000[39m,
        pingInterval: [33m25000[39m,
        upgradeTimeout: [33m10000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        transports: [36m[Object][39m,
        allowUpgrades: [33mtrue[39m,
        allowRequest: [36m[Function: bound ][39m,
        cookie: [32m'io'[39m,
        cookiePath: [33mfalse[39m,
        perMessageDeflate: [36m[Object][39m,
        httpCompression: [36m[Object][39m,
        ws: [36m[Object][39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m1[39m },
     upgrading: [33mfalse[39m,
     upgraded: [33mfalse[39m,
     readyState: [32m'open'[39m,
     writeBuffer: [ [36m[Object][39m ],
     packetsFn: [ [90mundefined[39m ],
     sentCallbackFn: [],
     cleanupFn: [ [36m[Function][39m, [36m[Function][39m ],
     request: 
      IncomingMessage {
        _readableState: [36m[Object][39m,
        readable: [33mtrue[39m,
        domain: [1mnull[22m,
        _events: {},
        _eventsCount: [33m0[39m,
        _maxListeners: [90mundefined[39m,
        socket: [36m[Object][39m,
        connection: [36m[Object][39m,
        httpVersionMajor: [33m1[39m,
        httpVersionMinor: [33m1[39m,
        httpVersion: [32m'1.1'[39m,
        complete: [33mtrue[39m,
        headers: [36m[Object][39m,
        rawHeaders: [36m[Object][39m,
        trailers: {},
        rawTrailers: [],
        upgrade: [33mfalse[39m,
        url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_8rW'[39m,
        method: [32m'GET'[39m,
        statusCode: [1mnull[22m,
        statusMessage: [1mnull[22m,
        client: [36m[Object][39m,
        _consuming: [33mfalse[39m,
        _dumped: [33mtrue[39m,
        _query: [36m[Object][39m,
        res: [36m[Object][39m,
        cleanup: [36m[Function: cleanup][39m },
     remoteAddress: [32m'::ffff:10.210.30.41'[39m,
     checkIntervalTimer: [1mnull[22m,
     upgradeTimeoutTimer: [1mnull[22m,
     pingTimeoutTimer: 
      Timeout {
        _called: [33mfalse[39m,
        _idleTimeout: [33m85000[39m,
        _idlePrev: [36m[Object][39m,
        _idleNext: [36m[Object][39m,
        _idleStart: [33m1974[39m,
        _onTimeout: [36m[Function][39m,
        _repeat: [1mnull[22m },
     transport: 
      XHR {
        readyState: [32m'open'[39m,
        discarded: [33mfalse[39m,
        closeTimeout: [33m30000[39m,
        maxHttpBufferSize: [33m100000000[39m,
        httpCompression: [36m[Object][39m,
        supportsBinary: [33mtrue[39m,
        _events: [36m[Object][39m,
        _eventsCount: [33m5[39m,
        sid: [32m'iJV3mzfYKrrGADHOAAAC'[39m,
        req: [1mnull[22m,
        res: [1mnull[22m,
        writable: [33mfalse[39m },
     _events: 
      { close: [36m[Object][39m,
        data: [36m[Function: bound ][39m,
        error: [36m[Function: bound ][39m },
     _eventsCount: [33m3[39m },
  rooms: {},
  acks: {},
  connected: [33mtrue[39m,
  disconnected: [33mfalse[39m,
  handshake: 
   { headers: 
      { host: [32m'10.210.30.148:3000'[39m,
        connection: [32m'keep-alive'[39m,
        [32m'user-agent'[39m: [32m'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36'[39m,
        origin: [32m'http://10.210.30.148'[39m,
        accept: [32m'*/*'[39m,
        referer: [32m'http://10.210.30.148/sku/'[39m,
        [32m'accept-encoding'[39m: [32m'gzip, deflate, sdch'[39m,
        [32m'accept-language'[39m: [32m'ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4'[39m,
        cookie: [32m'io=zjSnoWc0-LpfoveeAAAB'[39m },
     time: [32m'Thu Sep 29 2016 16:47:43 GMT+0400 (SAMT)'[39m,
     address: [32m'::ffff:10.210.30.41'[39m,
     xdomain: [33mtrue[39m,
     secure: [33mfalse[39m,
     issued: [33m1475153263599[39m,
     url: [32m'/socket.io/?EIO=3&transport=polling&t=LTr_8rW'[39m,
     query: { EIO: [32m'3'[39m, transport: [32m'polling'[39m, t: [32m'LTr_8rW'[39m } } }
1:0.09 2:1.72 3:0.99 4:0.08 heap = 15828240
1:0.05 2:1.75 3:1.00 4:0.02 heap = 15914160
1:0.01 2:1.70 3:0.97 4:0.00 heap = 16008360
1:0.01 2:1.68 3:0.98 4:0.00 heap = 16114656
min_max
[ RowDataPacket { minimum: [33m1475132843650[39m } ]
[ RowDataPacket { maximum: [33m1475153214074[39m } ]
[ RowDataPacket { minimum: [33m1475132865570[39m } ]
[ RowDataPacket { maximum: [33m1475153266883[39m } ]
undefined:
all con:[33m4[39m
free con:[33m4[39m
min:1475132843650 max:1475153214074
min:1475132865570 max:1475153266883
{ min: [33m1475132843650[39m, max: [33m1475153266883[39m, tube: [33m2[39m }
ARJ LOAD started
interval:20423233
ArjLoad Pool NB OK
ArjLoad Pool Prichal OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.01 2:1.74 3:1.05 4:0.00 heap = 42841688
ARJ LOAD started
interval:20423233
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.01 2:1.72 3:0.99 4:0.00 heap = 50975072
1:0.02 2:1.69 3:0.99 4:0.02 heap = 51057736
min_max
[ RowDataPacket { minimum: [33m1475132843650[39m } ]
[ RowDataPacket { maximum: [33m1475153214074[39m } ]
[ RowDataPacket { minimum: [33m1475132865570[39m } ]
[ RowDataPacket { maximum: [33m1475153270104[39m } ]
undefined:
all con:[33m4[39m
free con:[33m4[39m
min:1475132843650 max:1475153214074
min:1475132865570 max:1475153270104
{ min: [33m1475132843650[39m, max: [33m1475153270104[39m, tube: [33m3[39m }
1:0.06 2:1.70 3:1.00 4:0.07 heap = 51264760
ARJ LOAD started
interval:20426454
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.07 2:1.74 3:1.01 4:0.06 heap = 73349480
ARJ LOAD started
interval:20426454
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.03 2:1.73 3:0.99 4:0.00 heap = 27277976
min_max
[ RowDataPacket { minimum: [33m1475132843650[39m } ]
[ RowDataPacket { maximum: [33m1475153214074[39m } ]
[ RowDataPacket { minimum: [33m1475132865570[39m } ]
[ RowDataPacket { maximum: [33m1475153273116[39m } ]
undefined:
all con:[33m4[39m
free con:[33m4[39m
min:1475132843650 max:1475153214074
min:1475132865570 max:1475153273116
{ min: [33m1475132843650[39m, max: [33m1475153273116[39m, tube: [33m2[39m }
ARJ LOAD started
interval:20429466
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.04 2:1.66 3:0.95 4:0.04 heap = 33954136
1:0.09 2:1.74 3:1.01 4:0.08 heap = 34133792
ARJ LOAD started
interval:20429466
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.03 2:1.72 3:1.02 4:0.03 heap = 45116040
1:0.07 2:1.74 3:1.02 4:0.06 heap = 45215640
1:0.01 2:1.69 3:1.00 4:0.00 heap = 45297736
1:0.03 2:1.69 3:0.95 4:0.00 heap = 20475272
1:0.05 2:1.70 3:0.99 4:0.04 heap = 20557240
Data Local Minutly saved in DB successuful
Data Local Minutly saved in DB successuful
Data Local Minutly saved in DB successuful
Data Local Minutly saved in DB successuful
min_max
[ RowDataPacket { minimum: [33m1475132843650[39m } ]
[ RowDataPacket { maximum: [33m1475153214074[39m } ]
[ RowDataPacket { minimum: [33m1475132865570[39m } ]
[ RowDataPacket { maximum: [33m1475153280583[39m } ]
undefined:
all con:[33m4[39m
free con:[33m4[39m
min:1475132843650 max:1475153214074
min:1475132865570 max:1475153280583
{ min: [33m1475132843650[39m, max: [33m1475153280583[39m, tube: [33m3[39m }
ARJ LOAD started
interval:20436933
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
ARJ LOAD started
interval:20436933
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.02 2:1.70 3:0.98 4:0.00 heap = 46176496
1:0.04 2:1.70 3:0.98 4:0.02 heap = 54758944
1:0.06 2:1.75 3:1.03 4:0.07 heap = 54839672
1:0.06 2:1.74 3:1.03 4:0.04 heap = 54926360
1:0.02 2:1.72 3:0.99 4:0.00 heap = 23393168
1:0.02 2:1.68 3:0.98 4:0.00 heap = 23518600
ARJ LOAD started
interval:4181679.3701171875
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.08 2:1.75 3:1.02 4:0.07 heap = 30155408
1:0.06 2:1.74 3:1.02 4:0.01 heap = 30326320
1:0.00 2:1.67 3:0.98 4:0.00 heap = 30404504
1:0.00 2:1.67 3:0.98 4:0.00 heap = 30485448
ARJ LOAD started
interval:188741.79711914062
ArjLoad Pool Prichal OK
ArjLoad Pool NB OK
arj:
all con:[33m4[39m
free con:[33m4[39m
1:0.05 2:1.71 3:1.00 4:0.07 heap = 31450608
1:0.07 2:1.75 3:1.03 4:0.07 heap = 31528016
1:0.04 2:1.74 3:1.00 4:0.01 heap = 31604528
1:0.00 2:1.71 3:1.02 4:0.00 heap = 31679832
1:0.03 2:1.69 3:0.97 4:0.00 heap = 31774528
